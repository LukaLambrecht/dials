# Notes
#
# 1. This docker-compose is not production-ready, you should use it only for development puporses
#    if do not want to run the entire stack natively
#
# 2. This file assumes that PostgreSQL and Redis are running as standalone docker containers
#    as describe in backend's README, so we need to set network_mode to "host"
#    in any application that need to communicate with those containers.
#    Optionally you can modified it yourself an run PostgresSQL and Redis from it and remove the network_mode
#    but make sure to expose all the necessary ports and check the links between containers
#
# 3. This file also assumes that nanoDQMIO files are stored under the path "/mnt/nanodqmio" in the host
#    you can modify this location as you wish, remember to also modify the path in .env
#    if the application is also going to look for the files anywhere else

version: '3'

services:
  django_rest_api_dev:
    container_name: django_rest_api_dev
    image: local/django_rest_api_dev
    build:
      context: ./backend
      args:
        - UID
        - GID
    # ports: # Not needed when network mode is set to host
    #   - 8000:8000
    volumes:
      - ./backend/:/home/app/rest_api
      - /mnt/nanodqmio:/mnt/nanodqmio
    command: bash -c 'cd mlplayground && python3 manage.py runserver 0.0.0.0:8000'
    network_mode: "host"

  django_celery_worker1_dev:
    container_name: django_celery_worker1_dev
    image: local/django_rest_api_dev
    volumes:
      - ./backend/:/home/app/rest_api
      - /mnt/nanodqmio:/mnt/nanodqmio
    command: bash -c 'cd mlplayground && celery -A mlplayground worker -l INFO -c 1 -n worker1 -Q dqmio_file_indexer_queue'
    entrypoint: ''
    depends_on:
      - django_rest_api_dev
    network_mode: "host"

  django_celery_worker2_dev:
    container_name: django_celery_worker2_dev
    image: local/django_rest_api_dev
    volumes:
      - ./backend/:/home/app/rest_api
      - /mnt/nanodqmio:/mnt/nanodqmio
    command: bash -c 'cd mlplayground && celery -A mlplayground worker -l INFO -c 1 -n worker2 -Q dqmio_etl_queue'
    entrypoint: ''
    depends_on:
      - django_rest_api_dev
    network_mode: "host"

  django_celery_beat_dev:
    container_name: django_celery_beat_dev
    image: local/django_rest_api_dev
    volumes:
      - ./backend/:/home/app/rest_api
      - /mnt/nanodqmio:/mnt/nanodqmio
    command: bash -c 'cd mlplayground && celery -A mlplayground beat -l INFO'
    entrypoint: ''
    depends_on:
      - django_rest_api_dev
    network_mode: "host"

  frontend_dev:
    container_name: frontend_dev
    image: frontend_dev
    build:
      context: ./frontend
      args:
        - UID
        - GID
    # ports: # Not needed when network mode is set to host
    #   - 3000:3000
    volumes:
      - ./frontend/:/home/app/web
    command: bash -c "yarn run start"
    depends_on:
      - django_rest_api_dev
    network_mode: "host"
